[gd_resource type="VisualShader" load_steps=12 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "texture"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=3]
source = 2

[sub_resource type="VisualShaderNodeColorUniform" id=4]
uniform_name = "color"

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorFunc" id=9]
function = 4

[sub_resource type="VisualShaderNodeVectorDecompose" id=10]

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 0

[resource]
code = "shader_type canvas_item;
uniform vec4 color : hint_color;



void vertex() {
// Output:0

}

void fragment() {
// Input:6
	float n_out6p0 = TIME;

// ScalarFunc:9
	float n_out9p0 = sin(n_out6p0);

// ScalarOp:10
	float n_in10p1 = 1.00000;
	float n_out10p0 = n_out9p0 + n_in10p1;

// ScalarOp:11
	float n_in11p1 = 2.00000;
	float n_out11p0 = n_out10p0 / n_in11p1;

// ColorUniform:5
	vec3 n_out5p0 = color.rgb;
	float n_out5p1 = color.a;

// VectorFunc:7
	vec3 n_out7p0;
	{
		vec3 c = n_out5p0;
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		n_out7p0 = vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}

// VectorDecompose:8
	float n_out8p0 = n_out7p0.x;
	float n_out8p1 = n_out7p0.y;
	float n_out8p2 = n_out7p0.z;

// VectorCompose:12
	vec3 n_out12p0 = vec3(n_out11p0, n_out8p1, n_out8p2);

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Input:2

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out3p0.xy);
		n_out4p0 = _tex_read.rgb;
		n_out4p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out12p0;
	COLOR.a = n_out4p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 341, -126 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 660, 140 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -200, 340 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -160, 240 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 66, 157 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 280, 60 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( 80, -300 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( 400, -40 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( 600, -40 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( 300, -320 )
nodes/fragment/10/node = SubResource( 5 )
nodes/fragment/10/position = Vector2( 520, -320 )
nodes/fragment/11/node = SubResource( 6 )
nodes/fragment/11/position = Vector2( 640, -160 )
nodes/fragment/12/node = SubResource( 7 )
nodes/fragment/12/position = Vector2( 938, 15 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 2, 3, 0, 4, 0, 4, 1, 0, 1, 5, 0, 7, 0, 7, 0, 8, 0, 6, 0, 9, 0, 9, 0, 10, 0, 10, 0, 11, 0, 11, 0, 12, 0, 8, 1, 12, 1, 8, 2, 12, 2, 12, 0, 0, 0 )
